<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
	<!-- AccessDeniedHandler 인터페이스를 구현해 클래시를 빈으로 등록 -->
	<bean id="customAccessDenied" class="org.manager.security.CustomAccessDeniedHandler"></bean>
	<!-- 로그인 성공시 인터페이스 구현 클래스 빈으로 등록 -->
	<bean id="customLoginSuccess" class="org.manager.security.CustomLoginSuccessHandler"></bean>
	<!-- 암호화 빈 등록 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<!-- 아이디 인증 등록? -->
	<bean id="customUserDetailService" class="org.manager.security.CustomUserDetailService" ></bean>

	<!-- 시큐리티 시작점 -->
	<security:http>
		<!-- 접근 제한자 설정하기 -->
		<security:intercept-url pattern="/sample/all" access="permitAll"/>
		<security:intercept-url pattern="/sample/member" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
		<!-- 로그인화면을 제공해 준다 --> <!-- 커스텀 로그인 페이지 -->
		<!-- 	<security:form-login  login-page="/customLogin"/> -->
		<!-- 접근 거부 핸들러 -->
		<security:access-denied-handler ref="customAccessDenied"/>
		<!-- authentication-success-handler-ref="customLoginSuccess" -->
		<security:form-login  login-page="/customLogin"  authentication-success-handler-ref="customLoginSuccess"/>
		<!-- 로그아웃 생성 --> <!-- 로그아웃 할때 remember-me JSESSION_ID 쿠키 삭제 -->
		<security:logout logout-url="/customLogout" invalidate-session="true"
			delete-cookies="remember-me, JSESSION_ID"/>
		<!-- 에러 페이지 -->
		<!-- <security:access-denied-handler error-page="/accessError" /> -->
		<!-- 클래스 엑세스 생성 -->
		<security:access-denied-handler ref="customAccessDenied" />
	
		<!-- 자동 로그인 쿠키 설정 시간  -->
		<security:remember-me data-source-ref="dataSource" 
		token-validity-seconds="604800" />
		
	</security:http>
	
	<security:authentication-manager>
	<!--  인증 제공자 (실제 인증 작업을 처리) -->
		<security:authentication-provider user-service-ref="customUserDetailService">
			<!-- 패스 워드 인코더  -->
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
